% Generated by roxygen2 (4.0.2.9000): do not edit by hand
% Please edit documentation in R/ggplot_wrapper.R
\name{gg_frequency}
\alias{gg_frequency}
\title{Generate bar-plot for the frequency of elements in data.frame.}
\usage{
gg_frequency(dat, percentage = FALSE, annColors = NULL, label = FALSE,
  ylim = NULL, x_order = NULL, xlab = "", ylab = "Count/Percentage",
  legend.title = NULL, x.angle = 90, x.vjust = 0.5, x.size = 8,
  main = "")
}
\arguments{
\item{dat}{input a data.frame (probes in row; samples in column).}

\item{percentage}{Default is FALSE. It will show the counts of the element
when it is FALSE.}

\item{annColors}{input the specified colors of the element.}

\item{label}{Default is FALSE. When it is TRUE, it will show the
count/percentage in the figure.}

\item{ylim}{input the limits in y axis.}

\item{x_order}{input the order in x axis.}

\item{xlab}{character string specifying the label of x axis.}

\item{ylab}{character string specifying the label of y axis.}

\item{legend.title}{input the title of the legend.}

\item{main}{character string specifying the graph title.}
}
\value{
a bar-plot of a data frame.
}
\description{
In processing microarry data, usually we need to see how the expression values on each
 array are distributed. We put box-plots side-by-side to see the distribution within
 the dataset.
}
\examples{
y <- data.frame(matrix(0, 9, 10))
rownames(y) <- paste("Probe",1:9, sep="_")
colnames(y) <- c(paste("A", 1:10, sep=""))
dat <- data.frame(apply(y, c(1,2), function(x) sample(c("Gain","Loss", NA),1)))
cols <- c("Gain"="dodgerblue2", "Loss"="indianred2")
gg_order <- rownames(dat)[order(apply(apply(dat, 1, table),2, sum), decreasing = TRUE)]
#gg_order <- rownames(dat)[order(do.call("rbind", lapply(apply(dat, 1, table), sum)), decreasing = TRUE)]
gg_frequency(dat)
gg_frequency(dat, percentage=TRUE)
gg_frequency(dat, percentage=TRUE, annColors=cols)
gg_frequency(dat, percentage=TRUE, annColors=cols, label=TRUE)
gg_frequency(dat, percentage=TRUE, annColors=cols, label=TRUE, ylim=c(0, 0.9))
gg_frequency(dat, percentage=TRUE, annColors=cols, label=TRUE, ylim=c(0, 0.9),
             x_order=gg_order)
gg_frequency(dat, percentage=TRUE, annColors=cols, label=TRUE, ylim=c(0, 0.9),x_order=gg_order,
             ylab="Percentage of Alteration", x.angle=0, legend.title="Alteration")
gg_frequency(dat, annColors=cols)
gg_frequency(dat, annColors=cols, label=TRUE)
gg_frequency(dat, annColors=cols, label=TRUE, ylim=c(0, 30))
gg_frequency(dat, annColors=cols, label=TRUE, ylim=c(0, 30),
             gg_order=gg_order)
gg_frequency(dat, annColors=cols, label=TRUE, ylim=c(0, 30), x_order=gg_order,
             ylab="Percentage of Alteration", x.angle=0, legend.title="Alteration")
}
\seealso{
\code{\link{geom_bar}} which this function wraps.
}

